<?xml version="1.0" encoding="UTF-8" ?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
 
        http://www.apache.org/licenses/LICENSE-2.0
 
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.yawni</groupId>
    <artifactId>yawni-parent</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <relativePath>../parent/pom.xml</relativePath>
  </parent>
  <artifactId>yawni-wordnet-browser</artifactId>
  <name>Yawni WordNet Browser</name>
  <description>
    A GUI browser of WordNet content using the Yawni API.
  </description>
  <packaging>jar</packaging>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>appassembler-maven-plugin</artifactId>
        <configuration>
          <!-- 
          mvn package appassembler:assemble 
          sh target/appassembler/bin/browser
          -->
          <!-- <generateRepository>false</generateRepository> -->
          <!-- appassembler bug: no way to do: -Xdock:name="Foo Browser" -->
          <!-- TODO consider just making a shaded "executable jar" -->
          <extraJvmArguments>-Xdock:name=Yawni -Dfile.encoding=US-ASCII -ea -Dswing.aatext=true -Dawt.useSystemAAFontSettings=on -Dapple.awt.textantialiasing=on -Dapple.laf.useScreenMenuBar=true -Dapple.awt.brushMetalLook=true -Dapple.awt.brushMetalRounded=true -Dapple.awt.showGrowBox=false</extraJvmArguments>
          <assembleDirectory>${project.build.directory}/binary</assembleDirectory>
          <repositoryLayout>flat</repositoryLayout>
          <repositoryName>lib</repositoryName>
          <programs>
            <program>
              <mainClass>${app.main.class}</mainClass>
              <name>browser</name>
            </program>
          </programs>
        </configuration>
      </plugin>
      <!-- hacky test with assembly plugin
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/assemble/repository.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>
      -->
      <!-- not even sure what this is !?
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
        <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      -->
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.yawni</groupId>
      <artifactId>yawni-wordnet-api</artifactId>
    </dependency>
<!--    <dependency>-->
<!--      <groupId>com.github.mfornos</groupId>-->
<!--      <artifactId>humanize-icu</artifactId>-->
<!--      <version>1.2.2</version>-->
<!--    </dependency>-->
    <dependency>
      <groupId>org.yawni</groupId>
      <artifactId>${default-wordnet-data-version}</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-swing</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <!-- mvn help:active-profiles -->
  <!-- mvn help:effective-pom -->
  <profiles>
    <profile>
      <id>useLog4j</id>
      <activation>
        <property>
          <name>useLog4j</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>makeShadedJar</id>
      <activation>
        <property>
          <name>makeShadedJar</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>3.6.1</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <minimizeJar>true</minimizeJar>
                  <transformers>
                    <!--
                    for JNLP usage
                    -->
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ComponentsXmlResourceTransformer"/>
                    <!--
                    for commandline usage
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                      <mainClass>${app.main.class}</mainClass>
                    </transformer>
                    -->
                  </transformers>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- 
    odd behavior: even though this is also in parent/pom, if this is deleted, parts of shaded jar artifact will not
    be signed rendering it useless:
    mvn -Dmaven.test.skip=true -PuseLog4j,makeShadedJar,makeSignedJar clean package
    jarsigner -verify -verbose target/signed/yawni-wordnet-browser-2.0.0-SNAPSHOT.jar
    -->
    <profile>
      <id>makeSignedJar</id>
      <activation>
        <property>
          <name>makeSignedJar</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
              <archive>
                <!-- <compress>false</compress> -->
                <index>true</index>
                <manifest>
                  <mainClass>${app.main.class}</mainClass>
                </manifest>
                <manifestEntries>
                  <Application-Name>Yawni WordNet Browser</Application-Name>
                  <Permissions>all-permissions</Permissions>
                  <Codebase>*</Codebase>
                  <Implementation-Build-Timestamp>${timestamp}</Implementation-Build-Timestamp>
                  <Implementation-Build-Rev>${buildNumber}</Implementation-Build-Rev>
                </manifestEntries>
              </archive>
<!--              <alias>${alias}</alias>-->
<!--              <storepass>${storepass}</storepass>-->
<!--              <signedjar>${project.build.directory}/signed/${project.build.finalName}.jar</signedjar>-->
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jarsigner-plugin</artifactId>
            <configuration>
              <alias>${alias}</alias>
              <storepass>${storepass}</storepass>
              <keypass>${keypass}</keypass>
              <storetype>pkcs12</storetype>
              <tsa>https://timestamp.comodoca.com/rfc3161</tsa>
              <arguments>
                <argument>-digestalg</argument>
                <argument>SHA-256</argument>
              </arguments>
              <keystore>${keystore}</keystore>
              <storetype>pkcs12</storetype>
            </configuration>
            <executions>
              <execution>
                <id>sign</id>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
              <execution>
                <id>verify</id>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>useYawniData</id>
      <activation>
        <property>
          <name>useYawniData</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.yawni</groupId>
          <artifactId>${default-wordnet-data-version}</artifactId>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>

